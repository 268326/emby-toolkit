name: Docker Image CI & CD for Emby Actor Processor

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        
      # 我们不再需要登录 Docker Hub 或提取元数据来进行这个特定的解析测试

      # --- 核心调试步骤：在 CI 中动态创建并使用一个极简 Dockerfile ---
      - name: Create Minimal Dockerfile in CI and Attempt Build
        run: |
          echo "Creating a minimal Dockerfile named Minimal_Dockerfile_CI ..."
          # 使用 printf 来精确控制内容和换行符 (确保是 LF)
          printf "FROM alpine:latest\nRUN echo 'Minimal Dockerfile in CI built successfully!'" > ./Minimal_Dockerfile_CI
          
          echo "--- Minimal_Dockerfile_CI Content (cat) ---"
          cat ./Minimal_Dockerfile_CI
          echo "--- End of Minimal_Dockerfile_CI Content ---"
          echo ""
          echo "--- Minimal_Dockerfile_CI Hexdump (xxd) ---"
          xxd ./Minimal_Dockerfile_CI
          echo "--- End of Minimal_Dockerfile_CI Hexdump ---"
          echo ""
          echo "Attempting to build Minimal_Dockerfile_CI..."
          # 直接使用 docker buildx build 命令进行测试，不涉及 docker/build-push-action 的复杂性
          docker buildx build --progress=plain -f ./Minimal_Dockerfile_CI -t testimage:ci-minimal .

      # --- 你原来的构建和推送步骤暂时注释掉，直到我们解决解析问题 ---
      # - name: Log in to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      # - name: Extract Docker metadata
      #   id: meta
      #   uses: docker/metadata-action@v5
      #   with:
      #     images: |
      #       ${{ secrets.DOCKERHUB_USERNAME }}/emby-actor-processor
      #     tags: |
      #       type=semver,pattern={{version}}
      #       type=semver,pattern={{major}}.{{minor}}
      #       type=semver,pattern={{major}}
      #       type=edge,branch=main
      #       type=raw,value=latest,enable={{is_default_branch}}

      # - name: Build and push Docker image
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: .
      #     file: ./Dockerfile # 指向你原来的 Dockerfile
      #     push: true 
      #     tags: ${{ steps.meta.outputs.tags }}
      #     labels: ${{ steps.meta.outputs.labels }}
      #     cache-from: type=gha
      #     cache-to: type=gha,mode=max